#-*- mode: ruby -*-
#vim: set ft=ruby :
# Домашняя работа №2

distr_name = 'ncsot/centos7-otuslab-4raid'
home_dir = ENV["HOME"] + '/VirtualBox VMs'
groups_name_path = '/otus-admin-course'
root_disk_path = home_dir + groups_name_path + 'otuslab-disk001.vmdk'
disk_place = home_dir + groups_name_path + '/otus-lab-disk/'
disk_name = 'raidarr'
disk_extension = "vmdk"
disk_size = 5000
disk_amt = 4
cpu_amt = 2
memory_size = 1024
guest_ip = '192.168.11.2'


MACHINES = {
  :"otus-lab2" => {
        :box_name => distr_name,
        :ip_addr => guest_ip
  }
}

Vagrant.configure("2") do |config|
  config.vm.box_check_update = false
  config.vbguest.auto_update = false
  config.vbguest.no_remote = true
  MACHINES.each do |boxname, boxconfig|
    config.vm.define boxname do |box|
      box.vm.box = boxconfig[:box_name]
      box.vm.host_name = boxname.to_s
      box.vm.network "private_network", ip: boxconfig[:ip_addr]
      box.vm.synced_folder '.',"/home/vagrant/shared_folder/", type:"virtualbox" 
      box.vm.provider :virtualbox do |vb|
        vb.name = "otus-lab2-ncsot"
        vb.customize ["modifyvm", :id, "--memory", memory_size]
        vb.customize ["modifyvm", :id, "--cpus", cpu_amt]
        vb.customize ["modifyvm", :id, "--groups", groups_name_path]
        (1..disk_amt).each do |n|
          proceed_disk =  "%s/%s-%02d.%s" % [disk_place, disk_name, n, disk_extension]
          unless File.exist?(proceed_disk)
            vb.customize ['createmedium', '--filename', proceed_disk, '--format','vmdk','--variant', 'Fixed', '--size', disk_size]
          end
        end
        (1..disk_amt).each do |n|
          proceed_disk =  "%s/%s-%02d.%s" % [disk_place, disk_name, n, disk_extension]
          vb.customize ['storageattach', :id, '--storagectl', 'SATA Controller', '--port', n+1, '--device', 0, '--type', 'hdd', '--medium', proceed_disk]
        end 
      end
      box.vm.provision "shell", path: "./provisions/migrateRAID.sh"
      box.trigger.after :halt do |trigger|
        trigger.info = "Detach old storage"
        trigger.ruby do |env,machine|
          puts `VBoxManage.exe storageattach #{machine.id} --storagectl "SATA Controller" --port 0 --medium emptydrive`
        end
      end
      box.trigger.after :destroy do |trigger|
        trigger.info = "Delete old storage"
        trigger.ruby do |env,machine|
          puts `echo #{root_disk_path} $$ VBoxManage.exe closemedium  #{root_disk_path} --delete`
        end
      end 
    end
  end
end