#-*- mode: ruby -*-
#vim: set ft=ruby :
# Лабараторная №4

ENV["LC_ALL"] = "en_US.UTF-8"
distr_name = 'ncsot/centos7-otuslab'
distr_ver = "0.0.4"
lab_num = 'lab4'
vm_name = 'ncsot-' + lab_num
home_dir = ENV["HOME"] + '/VirtualBox VMs'
groups_name_path = '/ncsot-otuslab'
disk_place = home_dir + groups_name_path + '/' + vm_name
disk_extension = "vmdk"
cpu_core = 2
memory_size = 4098
sata_flat_disk_arr = []
nvme_flat_disk_arr = []
DISK_ARR = {
  :ext1 => {
    :damt => 4,    
    :dname => "pool",
    :dsize => 10240,
    :dctl => "sata"
  },
  :ext2 => {
    :damt => 2,
    :dname => "cache",
    :dsize => 2048,
    :dctl => "nvme"
  }
}
DISK_ARR.each do |ext, cfg|
  (1..cfg[:damt]).each do |n|
    proceed_disk =  "%s/%s-%02d.%s" % [disk_place, cfg[:dname], n, disk_extension]
    case cfg[:dctl]
    when "sata"
      sata_flat_disk_arr << proceed_disk
    when "nvme"
      nvme_flat_disk_arr << proceed_disk
    end
  end
end

Vagrant.configure("2") do |config|
  config.vm.box = distr_name
  config.vm.box_version = distr_ver
  config.vm.host_name = vm_name
  config.vm.synced_folder '.',"/home/vagrant/shared_folder/", type:"rsync", disabled: true
  config.vm.synced_folder '.',"/home/vagrant/shared_folder/", type:"virtualbox" 
  config.vm.provider :virtualbox do |vb|
    vb.name = vm_name
    vb.customize ["modifyvm", :id, "--memory", memory_size]
    vb.customize ["modifyvm", :id, "--cpus", cpu_core]
    vb.customize ["modifyvm", :id, "--groups", groups_name_path]
    controllerExist = true
    DISK_ARR.each do |ext, cfg|
      (1..cfg[:damt]).each do |n|
        proceed_disk =  "%s/%s-%02d.%s" % [disk_place, cfg[:dname], n, disk_extension]
        unless File.exist?(proceed_disk)
          vb.customize ['createmedium', '--filename', proceed_disk, '--format', disk_extension, '--variant', 'Standard', '--size', cfg[:dsize]]
          controllerExist = false
        end
      end
    end
    if controllerExist == false
      vb.customize ["storagectl", :id, "--name", "NVMe Controller", "--add", "pcie", "--controller","NVMe"]
      sata_flat_disk_arr.each_with_index do |pdisk, idx|
        vb.customize ['storageattach', :id, '--storagectl', 'SATA Controller', '--port', idx+1, '--device', 0, '--type', 'hdd', '--medium', pdisk]
      end
      nvme_flat_disk_arr.each_with_index do |pdisk, idx|
        vb.customize ['storageattach', :id, '--storagectl', 'NVMe Controller', '--port', idx+1, '--device', 0, '--type', 'hdd', '--medium', pdisk]
      end
    end
  end
  config.vm.provision "shell", path: "../provision_scripts/provision.sh"
  config.vm.provision "shell", path: "../provision_scripts/tmux_provision.sh", privileged: false
end