#-*- mode: ruby -*-
#vim: set ft=ruby :
# Лабараторная №3

ENV["LC_ALL"] = "en_US.UTF-8"
distr_name = "centos/7"
distr_ver = "1804.02"
lab_num = 'lab3'
vm_name = 'ncsot-' + lab_num
home_dir = ENV["HOME"] + '/VirtualBox VMs'
groups_name_path = '/ncsot-otuslab'
disk_place = home_dir + groups_name_path
disk_extension = "vmdk"
root_dist_path = disk_place + '/' + vm_name + '/centos-7-1-1.x86_64.vmdk'
cpu_core = 2
memory_size = 1024
flat_disk_arr = []
DISK_ARR = {
  :ext1 => {
    :damt => 1,    
    :dname => "root_migrate",
    :dsize => 10240
  },
  :ext2 => {
    :damt => 1,
    :dname => "etc_dir",
    :dsize => 2048
  },
  :ext3 => {
    :damt => 2,
    :dname => "etc_fs",
    :dsize => 1024
  }
}
DISK_ARR.each do |ext, cfg|
  (1..cfg[:damt]).each do |n|
    proceed_disk =  "%s/%s-%02d.%s" % [disk_place, cfg[:dname], n, disk_extension]
    flat_disk_arr << proceed_disk
  end
end

Vagrant.configure("2") do |config|
  config.vbguest.auto_update = false
  config.vbguest.no_remote = true
  config.vm.box = distr_name
  config.vm.box_version = distr_ver
  config.vm.box_check_update = false
  config.vm.host_name = vm_name
  config.vm.provider :virtualbox do |vb|
    vb.name = vm_name
    vb.customize ["storagectl", :id, "--name", "SATA Controller", "--add", "sata"]
    vb.customize ["storageattach", :id, "--storagectl", "IDE", "--port", "0", "--device", "0", "--medium", "none",]
    vb.customize ["modifyvm", :id, "--memory", memory_size]
    vb.customize ["modifyvm", :id, "--cpus", cpu_core]
    vb.customize ["modifyvm", :id, "--groups", groups_name_path]
    vb.customize ["storageattach", :id, "--storagectl", "SATA Controller",'--type', 'hdd', "--port", "0", "--device", "0","--medium", root_dist_path]
    vb.customize ["storagectl", :id, "--name", "IDE", "--remove"]
    DISK_ARR.each do |ext, cfg|
      (1..cfg[:damt]).each do |n|
        proceed_disk =  "%s/%s-%02d.%s" % [disk_place, cfg[:dname], n, disk_extension]
        unless File.exist?(proceed_disk)
          vb.customize ['createmedium', '--filename', proceed_disk, '--format', disk_extension, '--variant', 'Standard', '--size', cfg[:dsize]]
          
        end
      end
    end
    flat_disk_arr.each_with_index do |pdisk, idx|
        vb.customize ['storageattach', :id, '--storagectl', 'SATA Controller', '--port', idx+1, '--device', 0, '--type', 'hdd', '--medium', pdisk]
    end
  end
end